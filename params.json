{"name":"Mojibake","tagline":"Dennis Wolfs","body":"## [Mojibake](http://encyfeestbende.github.io/mojibake/)\r\nPosted on mei 13, 2014 by [Dennis Wolfs](http://denniswolfs.wordpress.com/), [Encyfeestbende](http://encyfeestbende.github.io/Writing.github.io/)\r\n\r\n\r\nMojibake (文字化け, karaktervervorming) is de incorrecte weergave van karakters voor wanneer software een foute [tekencodering](http://nl.wikipedia.org/wiki/Tekencodering) gebruikt. Dit wordt veroorzaakt wanneer de juiste codering niet juist aangeduid is een bepaald document of wanneer deze verplaatst naar een systeem met een andere standaardencodering. Wanneer een computer niet beschikt om de juiste te gebruiken, zal die deze proberen weer te geven met een andere, wat vaak blokjesvorming of een hoop willekeurige tekens tot gevolg heeft. \r\n\r\n![Japanse wiki-pagina over Mojibake](http://s3.postimg.org/xhfyfwh1v/mojibake.png)\r\nDe Japanse wiki-pagina over Mojibake met Westerse tekenencodering\r\n\r\nTegenwoordig komt Mojibake minder vaak omdat nu vooral *[Shift JIS standard](http://en.wikipedia.org/wiki/Shift_JIS)* *[Unicode](http://en.wikipedia.org/wiki/Unicode)* wordt gebruikt door (web) developers, die voor weinig problemen zorgt. Vroeger gebruikte men echter op Japanse sites de *[Japanese Industrial Standard](http://en.wikipedia.org/wiki/Japanese_Industrial_Standard)* die niet door alle browsers ondersteund of herkend werd.\r\n\r\nNu en dan gebeurt het nochtans dat (bijvoorbeeld) op een Japanse website tekens incorrect worden weergeven wanneer het een om een oudere website gaat. Een diepgaande uitleg om Mojibake te vermijden kan men [hier](http://raiyaraj.wordpress.com/2008/07/03/8-steps-to-avoid-mojibake/) vinden. Een meer technische uitleg over de aard van Mojibake is te vinden op de blog van *[denbushi](http://www.denbushi.net/2003/02/avoiding-mojibake/)*","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}